{
  "openapi": "3.0.0",
  "info": {
    "title": "TrotoTrack",
    "description": "TrotoTrack API Documentation",
    "version": "1.0.0",
    "contact": {
      "name": "TrotoTrack",
      "url": "https://trototrack.online",
      "email": "trototrack@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://api.trototrack.online/",
      "description": "User Documentation"
    }
  ],
  "externalDocs": {
    "description": "Find out more about TrotoTrack",
    "url": "https://trototrack.online"
  },
  "paths": {
    "/login": {
      "post": {
        "tags": ["Page User"],
        "summary": "Login to the application",
        "description": "Login to the application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "hilal@gmail.com",
                    "password": "123456asd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLogin"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Login success",
                      "data": {
                        "id": "07546e64-f4da-4c77-9625-df1fbc536d1e",
                        "name": "hilal",
                        "username": "exoream",
                        "email": "hilal@gmail.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibmFtZSI6IkhpbGFsIiwiZW1haWwiOiJoaWxhbEBnbWFpbC5jb20iLCJpYXQiOjE1MTYyMzkwMjJ9.7J1"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "invalid_email": {
                    "value": {
                      "status": false,
                      "message": "Email is not valid"
                    }
                  },
                  "incorrect_password": {
                    "value": {
                      "status": false,
                      "message": "Password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "Email not registered"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Page User"],
        "summary": "Register to the application",
        "description": "Register to the application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRegister"
              },
              "examples": {
                "register": {
                  "value": {
                    "name": "troto",
                    "username": "troto",
                    "email": "troto@gmail.com",
                    "password": "123456asd",
                    "confirm_password": "123456asd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success created data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "password_length": {
                    "value": {
                      "status": false,
                      "message": "Password must be at least 8 characters long"
                    }
                  },
                  "password_mismatch": {
                    "value": {
                      "status": false,
                      "message": "Password and Confirm Password must be the same"
                    }
                  },
                  "invalid_email": {
                    "value": {
                      "status": false,
                      "message": "Email is not valid"
                    }
                  },
                  "email_registered": {
                    "value": {
                      "status": false,
                      "message": "Email already registered"
                    }
                  },
                  "username_exists": {
                    "value": {
                      "status": false,
                      "message": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Get profile user",
        "description": "Get profile user",
        "responses": {
          "200": {
            "description": "Get profile user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetUser"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success get data",
                      "data": {
                        "id": "07546e64-f4da-4c77-9625-df1fbc536d1e",
                        "name": "hilal",
                        "username": "exoream",
                        "email": "hilal@gmail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_id": {
                    "value": {
                      "status": false,
                      "message": "ID is required"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Update user profile",
        "description": "Update user profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateUser"
              },
              "examples": {
                "update": {
                  "value": {
                    "name": "hilal",
                    "username": "hilal",
                    "email": "hilal@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success updated data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_id": {
                    "value": {
                      "status": false,
                      "message": "ID is required"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  },
                  "invalid_email": {
                    "value": {
                      "status": false,
                      "message": "Email is not valid"
                    }
                  },
                  "email_registered": {
                    "value": {
                      "status": false,
                      "message": "Email already registered"
                    }
                  },
                  "username_exists": {
                    "value": {
                      "status": false,
                      "message": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Update password user",
        "description": "Update password user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdatePasswordUser"
              },
              "examples": {
                "update": {
                  "value": {
                    "old_password": "123456asd",
                    "new_password": "troto123456",
                    "confirm_password": "troto123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update password user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success updated password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  },
                  "short_password": {
                    "value": {
                      "status": false,
                      "message": "Password must be at least 8 characters long"
                    }
                  },
                  "password_mismatch": {
                    "value": {
                      "status": false,
                      "message": "Password and Confirm Password must be the same"
                    }
                  },
                  "incorrect_old_password": {
                    "value": {
                      "status": false,
                      "message": "Old password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "status": false,
                      "message": "Forbidden access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/articles": {
      "get": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Article"],
        "summary": "Get all article",
        "description": "Get all article",
        "responses": {
          "200": {
            "description": "Get all article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAllArticle"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success get all data",
                      "data": [
                        {
                          "id": "07546e64-f4da-4c77-9625-df1fbc536d1e",
                          "title": "Bumi Sementara",
                          "description": "Bumi sementara adalah bumi yang kita tempati sekarang",
                          "image": "https://trototrack.my.id/image.jpg",
                          "created_at": "2021-08-01T00:00:00Z"
                        },
                        {
                          "id": "07546e64-f4da-4c77-9625-df1fbc536d1e",
                          "title": "Bumi Sementara",
                          "description": "Bumi sementara adalah bumi yang kita tempati sekarang",
                          "image": "https://trototrack.my.id/image.jpg",
                          "created_at": "2021-08-01T00:00:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "No article found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Article"],
        "summary": "Get article by id",
        "description": "Get article by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/ArticleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Get article by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseArticle"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success get data",
                      "data": {
                        "id": "07546e64-f4da-4c77-9625-df1fbc536d1e",
                        "title": "Bumi Sementara",
                        "description": "Bumi sementara adalah bumi yang kita tempati sekarang",
                        "image": "https://trototrack.my.id/image.jpg",
                        "created_at": "2021-08-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_id": {
                    "value": {
                      "status": false,
                      "message": "ID is required"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "Article not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports": {
      "post": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Report"],
        "summary": "Create report",
        "description": "Create report",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReport"
              },
              "examples": {
                "create": {
                  "value": {
                    "location": "makassar",
                    "reference_location": "depan penjual bakso mas budi",
                    "latitude": -5.135399,
                    "longitude": 119.42379,
                    "description": "ini adalah contoh input report oleh user sendiri",
                    "image": "https://trototrack.my.id/image.jpg"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestReportMultiPart"
              },
              "examples": {
                "create": {
                  "value": {
                    "location": "makassar",
                    "reference_location": "depan penjual bakso mas budi",
                    "latitude": -5.135399,
                    "longitude": 119.42379,
                    "description": "ini adalah contoh input report oleh user sendiri",
                    "image": "https://trototrack.my.id/image.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success created data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "invalid_file": {
                    "value": {
                      "status": false,
                      "message": "Invalid file type. Only images with jpeg, png, and jpg formats are allowed"
                    }
                  },
                  "invalid_latitude": {
                    "value": {
                      "status": false,
                      "message": "Latitude must be between -90 and 90"
                    }
                  },
                  "invalid_longitude": {
                    "value": {
                      "status": false,
                      "message": "Longitude must be between -180 and 180"
                    }
                  },
                  "invalid_description": {
                    "value": {
                      "status": false,
                      "message": "Description must be at least 10 characters long"
                    }
                  },
                  "invalid_file_size": {
                    "value": {
                      "status": false,
                      "message": "File size must not be greater than 10MB"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Report"],
        "summary": "Get all report",
        "description": "Get all report",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitPagination"
          },
          {
            "$ref": "#/components/parameters/PagePagination"
          },
          {
            "$ref": "#/components/parameters/SearchLocationAndStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAllReport"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success get all data",
                      "data": [
                        {
                          "id": "0897413e-da0a-41ef-a20d-04d34ef67598",
                          "location": "makassar",
                          "reference_location": "depan penjual bakso mas budi",
                          "latitude": -5.135399,
                          "longitude": 119.42379,
                          "image": "https://storage.googleapis.com/trototrack/report/Bukti Pelaporan 3.png",
                          "description": "ini adalah contoh input report oleh user sendiri",
                          "status": "pending",
                          "created_at": "2021-08-01T00:00:00Z"
                        },
                        {
                          "id": "0897413e-da0a-41ef-a20d-04d34ef67598",
                          "location": "makassar",
                          "reference_location": "depan penjual bakso mas budi",
                          "latitude": -5.135399,
                          "longitude": 119.42379,
                          "image": "https://storage.googleapis.com/trototrack/report/Bukti Pelaporan 3.png",
                          "description": "ini adalah contoh input report oleh user sendiri",
                          "status": "pending",
                          "created_at": "2021-08-01T00:00:00Z"
                        }
                      ],
                      "pagination": {
                        "limit": 2,
                        "current_page": 1,
                        "last_page": 3
                      },
                      "count": 6
                    }
                  },
                  "no_report_found": {
                    "value": {
                      "status": true,
                      "message": "No report found",
                      "data": [],
                      "pagination": {
                        "limit": 2,
                        "current_page": 1,
                        "last_page": 1
                      },
                      "count": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "invalid_limit_page": {
                    "value": {
                      "status": false,
                      "message": "Page and limit must be a number"
                    }
                  },
                  "invalid_limit": {
                    "value": {
                      "status": false,
                      "message": "Limit must not be greater than 10"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/profile": {
      "get": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Report"],
        "summary": "Get report profile",
        "description": "Get report profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitPagination"
          },
          {
            "$ref": "#/components/parameters/PagePagination"
          },
          {
            "$ref": "#/components/parameters/SearchStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "Get report profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReport"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success get all data",
                      "data": [
                        {
                          "id": "0897413e-da0a-41ef-a20d-04d34ef67598",
                          "location": "makassar",
                          "reference_location": "depan penjual bakso mas budi",
                          "latitude": -5.135399,
                          "longitude": 119.42379,
                          "image": "https://storage.googleapis.com/trototrack/report/Bukti Pelaporan 3.png",
                          "description": "ini adalah contoh input report oleh user sendiri",
                          "status": "pending",
                          "created_at": "2021-08-01T00:00:00Z"
                        },
                        {
                          "id": "0897413e-da0a-41ef-a20d-04d34ef67598",
                          "location": "makassar",
                          "reference_location": "depan penjual bakso mas budi",
                          "latitude": -5.135399,
                          "longitude": 119.42379,
                          "image": "https://storage.googleapis.com/trototrack/report/Bukti Pelaporan 3.png",
                          "description": "ini adalah contoh input report oleh user sendiri",
                          "status": "pending",
                          "created_at": "2021-08-01T00:00:00Z"
                        }
                      ],
                      "pagination": {
                        "limit": 2,
                        "current_page": 1,
                        "last_page": 3
                      },
                      "count": 6
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_id": {
                    "value": {
                      "status": false,
                      "message": "ID is required"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "Report not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "put": {
        "security": [
          {
            "auth": []
          }
        ],
        "tags": ["Report"],
        "summary": "Update report by id",
        "description": "Update report by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/ReportId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReport"
              },
              "examples": {
                "create": {
                  "value": {
                    "location": "makassar",
                    "reference_location": "depan penjual bakso mas budi",
                    "latitude": -5.135399,
                    "longitude": 119.42379,
                    "description": "ini adalah contoh input report oleh user sendiri",
                    "image": "https://trototrack.my.id/image.jpg"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestReportMultiPart"
              },
              "examples": {
                "create": {
                  "value": {
                    "location": "makassar",
                    "reference_location": "depan penjual bakso mas budi",
                    "latitude": -5.135399,
                    "longitude": 119.42379,
                    "description": "ini adalah contoh input report oleh user sendiri",
                    "image": "https://trototrack.my.id/image.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update report by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success updated data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "missing_id": {
                    "value": {
                      "status": false,
                      "message": "ID is required"
                    }
                  },
                  "invalid_id": {
                    "value": {
                      "status": false,
                      "message": "ID is not valid"
                    }
                  },
                  "invalid_latitude": {
                    "value": {
                      "status": false,
                      "message": "Latitude must be between -90 and 90"
                    }
                  },
                  "invalid_longitude": {
                    "value": {
                      "status": false,
                      "message": "Longitude must be between -180 and 180"
                    }
                  },
                  "invalid_file": {
                    "value": {
                      "status": false,
                      "message": "Invalid file type. Only images with jpeg, png, and jpg formats are allowed"
                    }
                  },
                  "invalid_size_image": {
                    "value": {
                      "status": false,
                      "message": "File size must not be greater than 10MB"
                    }
                  },
                  "invalid_description": {
                    "value": {
                      "status": false,
                      "message": "Description must be at least 10 characters long"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "status": false,
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "status": false,
                      "message": "Forbidden access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "not_found": {
                    "value": {
                      "status": false,
                      "message": "Report not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/send-otp": {
        "post": {
          "tags": ["Page User"],
          "summary": "Send OTP",
          "description": "Send OTP",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSendOTP"
                },
                "examples": {
                  "send": {
                    "value": {
                      "email": "shiigetsu1@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Send OTP",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                  },
                  "examples": {
                    "success": {
                      "value": {
                        "status": true,
                        "message": "Success send otp"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseError"
                  },
                  "examples": {
                    "missing_fields": {
                      "value": {
                        "status": false,
                        "message": "Please fill all required fields"
                      }
                    },
                    "invalid_email": {
                      "value": {
                        "status": false,
                        "message": "Email is not valid"
                      }
                    },
                    "email_not_registered": {
                      "value": {
                        "status": false,
                        "message": "Email not registered"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseError"
                  },
                  "examples": {
                    "server_error": {
                      "value": {
                        "status": false,
                        "message": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verify-otp": {
      "post": {
        "tags": ["Page User"],
        "summary": "Verify OTP",
        "description": "Verify OTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVerifyOTP"
              },
              "examples": {
                "verify": {
                  "value": {
                    "email": "hilal@gmail.com",
                    "otp": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verify OTP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success verify otp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "invalid_email": {
                    "value": {
                      "status": false,
                      "message": "Email is not valid"
                    }
                  },
                  "email_not_registered": {
                    "value": {
                      "status": false,
                      "message": "Email not registered"
                    }
                  },
                  "invalid_email_otp": {
                    "value": {
                      "status": false,
                      "message": "Email or OTP is incorrect"
                    }
                  },
                  "invalid_otp": {
                    "value": {
                      "status": false,
                      "message": "OTP is incorrect"
                    }
                  },
                  "otp_expired": {
                    "value": {
                      "status": false,
                      "message": "OTP is expired"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/new-password": {
      "patch": {
        "tags": ["Page User"],
        "summary": "New Password",
        "description": "New Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestNewPassword"
              },
              "examples": {
                "new": {
                  "value": {
                    "email": "hilal@gmail.com",
                    "password": "troto123456",
                    "confirm_password": "troto123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New Password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateUpdateDelete"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": true,
                      "message": "Success update password"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "missing_fields": {
                    "value": {
                      "status": false,
                      "message": "Please fill all required fields"
                    }
                  },
                  "invalid_email": {
                    "value": {
                      "status": false,
                      "message": "Email is not valid"
                    }
                  },
                  "email_not_registered": {
                    "value": {
                      "status": false,
                      "message": "Email not registered"
                    }
                  },
                  "short_password": {
                    "value": {
                      "status": false,
                      "message": "Password must be at least 8 characters long"
                    }
                  },
                  "password_mismatch": {
                    "value": {
                      "status": false,
                      "message": "Password and Confirm Password must be the same"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                },
                "examples": {
                  "server_error": {
                    "value": {
                      "status": false,
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Authorization"
      }
    },
    "parameters": {
      "UserId": {
        "name": "id",
        "in": "path",
        "description": "Id of the user to get",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "id": {
            "value": "ce6c992c-f260-4bc9-b332-3e12a10df8fb"
          }
        }
      },
      "ArticleId": {
        "name": "id",
        "in": "path",
        "description": "id of the article to get",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "id": {
            "value": "ce6c992c-f260-4bc9-b332-3e12a10df8fb"
          }
        }
      },
      "ReportId": {
        "name": "id",
        "in": "path",
        "description": "id of the report to get",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "id": {
            "value": "ce6c992c-f260-4bc9-b332-3e12a10df8fb"
          }
        }
      },
      "LimitPagination": {
        "name": "limit",
        "in": "query",
        "description": "Limit data per page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 10
        },
        "examples": {
          "limit": {
            "value": 10
          }
        }
      },
      "PagePagination": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        },
        "examples": {
          "page": {
            "value": 1
          }
        }
      },
      "SearchLocationAndStatus": {
        "name": "search",
        "in": "query",
        "description": "Search Location and Status",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "location": {
            "value": "makassar"
          },
          "status": {
            "value": "pending"
          }
        }
      },
      "SearchStatus": {
        "name": "search",
        "in": "query",
        "description": "Search Status",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "status": {
            "value": "pending"
          }
        }
      }
    },
    "schemas": {
      "RequestLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "ResponseLogin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            },
            "required": ["name", "email", "token"]
          }
        }
      },
      "RequestRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        },
        "required": ["name", "email", "password", "confirm_password"]
      },
      "ResponseCreateUpdateDelete": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "message"]
      },
      "ResponseGetUser": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": ["id", "name", "email"]
          }
        }
      },
      "ResponseGetAllUsers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResponseGetUser"
        }
      },
      "RequestUpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "RequestUpdatePasswordUser": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "message"]
      },
      "ResponseArticle": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": ["id", "title", "description", "image"]
          }
        }
      },
      "ResponseAllArticle": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResponseArticle"
        }
      },
      "RequestReport": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "reference_location": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": ["location", "latitude", "longitude", "image"]
      },
      "RequestReportMultiPart": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "reference_location": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "nullable": false
          }
        },
        "required": ["location", "latitude", "longitude", "image"]
      },
      "ResponseAllReport": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "location": {
                  "type": "string"
                },
                "reference_location": {
                  "type": "string"
                },
                "latitude": {
                  "type": "number",
                  "format": "double"
                },
                "longitude": {
                  "type": "number",
                  "format": "double"
                },
                "image": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "location",
                "reference_location",
                "latitude",
                "longitude",
                "image",
                "description",
                "status",
                "created_at"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "integer"
              },
              "current_page": {
                "type": "integer"
              },
              "last_page": {
                "type": "integer"
              }
            },
            "required": ["limit", "current_page", "last_page"]
          },
          "count": {
            "type": "integer"
          }
        },
        "required": ["status", "message", "data", "pagination", "count"]
      },
      "ResponseReport": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "location": {
                "type": "string"
              },
              "reference_location": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "double"
              },
              "longitude": {
                "type": "number",
                "format": "double"
              },
              "image": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "location",
              "reference_location",
              "latitude",
              "longitude",
              "image",
              "description",
              "status",
              "created_at"
            ]
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "current_page": {
              "type": "integer"
            },
            "last_page": {
              "type": "integer"
            }
          },
          "required": ["limit", "current_page", "last_page"]
        },
        "count": {
          "type": "integer"
        },
        "required": ["status", "message", "data", "pagination", "count"]
      },
      "RequestSendOTP": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": ["email"]
      },
      "RequestVerifyOTP": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          }
        },
        "required": ["email", "otp"]
      },
      "RequestNewPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        },
        "required": ["email", "password", "confirm_password"]
      }
    }
  }
}
